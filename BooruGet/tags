!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ABCMeta	Booru.py	/^from abc import ABCMeta, abstractmethod$/;"	i
Arguments	arguments.py	/^class Arguments(object):$/;"	c
Booru	Booru.py	/^class Booru(object):$/;"	c
Booru	Gelbooru.py	/^import Booru$/;"	i
DownloadManager	DownloadManager.py	/^class DownloadManager(object):$/;"	c
ET	Gelbooru.py	/^import xml.etree.ElementTree as ET$/;"	i
Filter	Filter.py	/^class Filter(object):$/;"	c
Filter	Gelbooru.py	/^import Filter$/;"	i
GelbooruDownloader	Gelbooru.py	/^class GelbooruDownloader(Booru):$/;"	c
NUMBER_PER_PAGE	Gelbooru.py	/^    NUMBER_PER_PAGE = 100$/;"	v	class:GelbooruDownloader
QueuedFile	DownloadManager.py	/^import QueuedFile$/;"	i
QueuedFile	QueuedFile.py	/^class QueuedFile(object):$/;"	c
URL	Booru.py	/^    URL = None$/;"	v	class:Booru
__init__	Booru.py	/^    def __init__(self, width, height, error, arguments):$/;"	m	class:Booru
__init__	DownloadManager.py	/^    def __init__(self, event):$/;"	m	class:DownloadManager
__init__	Filter.py	/^    def __init__(self, arguments):$/;"	m	class:Filter
__init__	Gelbooru.py	/^    def __init__(self, searchString, targetWidth, targetHeight, error):$/;"	m	class:GelbooruDownloader
__init__	QueuedFile.py	/^    def __init__(self, url, file_name, extension, destination):$/;"	m	class:QueuedFile
__init__	arguments.py	/^        nsfw, search_string):$/;"	m	class:Arguments
__metaclass	Booru.py	/^    __metaclass = ABCMeta$/;"	v	class:Booru
abstractmethod	Booru.py	/^from abc import ABCMeta, abstractmethod$/;"	i
any_size	Booru.py	/^    any_size = False$/;"	v	class:Booru
download	DownloadManager.py	/^def download(queued_file, event):$/;"	f
download	Gelbooru.py	/^        def download(self):$/;"	f	function:GelbooruDownloader.getResults
enqueue_file	DownloadManager.py	/^    def enqueue_file(self, url, file_name, extension, destination):$/;"	m	class:DownloadManager
error	Booru.py	/^    error = 0$/;"	v	class:Booru
etree	Gelbooru.py	/^import xml.etree.ElementTree as ET$/;"	i
files	Filter.py	/^    files = [$/;"	v	class:Filter
filterResult	Filter.py	/^    def filterResult(self, result):$/;"	m	class:Filter
getResults	Gelbooru.py	/^    def getResults(self, url, pageNum, numberPerPage, tags):$/;"	m	class:GelbooruDownloader
get_results	Booru.py	/^    def get_results(self):$/;"	m	class:Booru
httplib2	Gelbooru.py	/^import httplib2$/;"	i
load_black_and_white_lists	Filter.py	/^    def load_black_and_white_lists(self):$/;"	m	class:Filter
math	Gelbooru.py	/^import math$/;"	i
numberOfPages	Gelbooru.py	/^    numberOfPages = 1000$/;"	v	class:GelbooruDownloader
numberPerPage	Gelbooru.py	/^    numberPerPage = 100$/;"	v	class:GelbooruDownloader
os	DownloadManager.py	/^import os$/;"	i
os	Filter.py	/^import os$/;"	i
os	QueuedFile.py	/^import os$/;"	i
pageNum	Gelbooru.py	/^    pageNum = 0$/;"	v	class:GelbooruDownloader
print_debug_message	Filter.py	/^        def print_debug_message(self, accepted):$/;"	f	function:Filter.filterResult
searchString	Gelbooru.py	/^    searchString = ""$/;"	v	class:GelbooruDownloader
start_downloader	DownloadManager.py	/^    def start_downloader(self):$/;"	m	class:DownloadManager
sys	Filter.py	/^import sys$/;"	i
targetHeight	Booru.py	/^    targetHeight = -1$/;"	v	class:Booru
targetHeight	Gelbooru.py	/^    targetHeight = -1$/;"	v	class:GelbooruDownloader
targetWidth	Booru.py	/^    targetWidth = -1$/;"	v	class:Booru
targetWidth	Gelbooru.py	/^    targetWidth = -1$/;"	v	class:GelbooruDownloader
threading	DownloadManager.py	/^import threading$/;"	i
time	Gelbooru.py	/^import time$/;"	i
urllib	DownloadManager.py	/^import urllib$/;"	i
verbose	Gelbooru.py	/^    verbose = False$/;"	v	class:GelbooruDownloader
xml	Gelbooru.py	/^import xml.etree.ElementTree as ET$/;"	i
